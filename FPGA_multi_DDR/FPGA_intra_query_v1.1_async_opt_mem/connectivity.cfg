kernel_frequency=200

### U250 ###

[connectivity]
nk=vadd:1:vadd_1
sp=vadd_1.entry_point_ids:DDR[3]
sp=vadd_1.query_vectors:DDR[3]
sp=vadd_1.mem_debug:DDR[3]
sp=vadd_1.out_id:DDR[2]
sp=vadd_1.out_dist:DDR[2]

sp=vadd_1.db_vectors_chan_0:DDR[2]
sp=vadd_1.db_vectors_chan_1:DDR[3]
# sp=vadd_1.db_vectors_chan_2:DDR[2]
# sp=vadd_1.db_vectors_chan_3:DDR[3]

sp=vadd_1.links_base_chan_0:DDR[2]
sp=vadd_1.links_base_chan_1:DDR[3]
# sp=vadd_1.links_base_chan_2:DDR[2]
# sp=vadd_1.links_base_chan_3:DDR[3]

# ### U55c ###
# [connectivity]

# nk=vadd:1:vadd_1
# sp=vadd_1.entry_point_ids:HBM[0]
# sp=vadd_1.query_vectors:HBM[0]
# sp=vadd_1.mem_debug:HBM[0]
# sp=vadd_1.out_id:HBM[28]
# sp=vadd_1.out_dist:HBM[28]

# sp=vadd_1.db_vectors_chan_0:HBM[4]
# # sp=vadd_1.db_vectors_chan_1:HBM[5]
# # sp=vadd_1.db_vectors_chan_2:HBM[6]
# # sp=vadd_1.db_vectors_chan_3:HBM[7]

# sp=vadd_1.links_base_chan_0:HBM[4]
# # sp=vadd_1.links_base_chan_1:HBM[5]
# # sp=vadd_1.links_base_chan_2:HBM[6]
# # sp=vadd_1.links_base_chan_3:HBM[7]


[profile]
data=all:all:all

[vivado] 

##### Enable one of the following strategies by uncomment the options #####

# param=project.writeIntermediateCheckpoints=true

prop=run.impl_1.strategy=Performance_SpreadSLLs
# prop=run.impl_1.strategy=Performance_BalanceSLLs
# prop=run.impl_1.strategy=Congestion_SSI_SpreadLogic_high

### Strategy Performance_SpreadSLL ###
# A placement variation for SSI devices with tendency to spread SLR crossings horizontally.
# prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=SSI_SpreadSLLs
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-critical_cell_opt -rewire -hold_fix -sll_reg_hold_fix -retime}


### Strategy Performance_BalanceSLL ###
# A placement variation for SSI devices with more frequent crossings of SLR boundaries.
# prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=SSI_BalanceSLLs
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-critical_cell_opt -rewire -hold_fix -sll_reg_hold_fix -retime}


### Strategy Congestion_SSI_SpreadLogic_high ###
# Spread logic throughout the device to avoid creating congested regions, intended for SSI devices (high setting is the highest degree of spreading).
# prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=SSI_SpreadLogic_high
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE=AggressiveExplore
# prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=AlternateCLBRouting
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED}=true
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-critical_cell_opt -rewire -hold_fix -sll_reg_hold_fix -retime}

### Other options ###
# param=compiler.userPreSysLinkTcl=$(PWD)/tcl/plram.tcl 
# param=route.enableGlobalHoldIter=true
# param=project.writeIntermediateCheckpoints=true
# prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=SSI_SpreadLogic_high
# prop=run.impl_1.{STEPS.PLACE_DESIGN.ARGS.MORE OPTIONS}={-post_place_opt}
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.IS_ENABLED}=true 
# prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE=ExploreWithHoldFix
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-fanout_opt -critical_cell_opt -rewire -slr_crossing_opt -tns_cleanup -hold_fix -sll_reg_hold_fix -retime}
# prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-placement_opt -critical_cell_opt}
#prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-hold_fix -slr_crossing_opt}
# prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=Explore
# prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=AlternateCLBRouting 
#prop=run.impl_1.{STEPS.PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-hold_fix}
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED}=true 
# prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-critical_cell_opt -rewire -hold_fix -sll_reg_hold_fix -retime}
#prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-critical_cell_opt -rewire -slr_crossing_opt -tns_cleanup -hold_fix -sll_reg_hold_fix -retime}
